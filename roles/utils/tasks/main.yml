---
- block:
  - name: update all packages to their latest version
    ansible.builtin.apt:
      name: "*"
      state: latest
    
  - name: utils installation
    ansible.builtin.apt:
      name:
        - docker
        - acl
        - docker-compose
        - python3
        - python3-pexpect
        - libssl-dev
        - openssl
        - build-essential
        - expect
        - curl
      state: present
      
  - name: gpg key for nodejs LTS installation
    ansible.builtin.apt_key:
      url: "{{ node_gpg_repository }}" 
      state: present
      
  - name: nodejs LTS repos installation
    ansible.builtin.apt_repository:
      repo: "{{ node_repository }}"
      state: present
      update_cache: yes
  
  - name: nodejs installation
    ansible.builtin.apt:
      name: nodejs
      state: present

  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- block: 
  - name: update all packages to their latest version
    ansible.builtin.dnf:
      name: "*"
      state: latest

  - name: utils installation
    ansible.builtin.dnf:
      name:
        - podman
        - podman-docker
        - python3
        - python3-pip
        - python3-pexpect
        - openssl-devel
        - openssl
        - gcc
        - expect
        - curl
        - gcc-c++
        - git
        - '@nodejs:{{ node_js_version }}'
      state: present

  - name: Install podman-compose python package
    ansible.builtin.pip:
      name: podman-compose
 
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat'

- name: balena-cli installation over npm
  community.general.npm:
    name: balena-cli
    global: true
    production: true
    unsafe_perm: true
...
